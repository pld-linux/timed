--- netkit-timed-0.17/timed/timed/readmsg.c.orig	Thu Nov 25 02:48:41 1999
+++ netkit-timed-0.17/timed/timed/readmsg.c	Tue Mar 27 18:00:42 2001
@@ -88,6 +88,7 @@
 	struct tsplist *prev;
 	register struct netinfo *ntp;
 	register struct tsplist *ptr;
+	ssize_t n;
 
 	if (trace) {
 		fprintf(fd, "readmsg: looking for %s from %s, %s\n",
@@ -206,11 +207,16 @@
 			continue;
 		}
 		fromlen = sizeof(from);
-		if (recvfrom(sock, (char *)&msgin, sizeof(struct tsp), 0,
-			     (struct sockaddr*)&from, &fromlen) < 0) {
+		if ((n = recvfrom(sock, (char *)&msgin, sizeof(struct tsp), 0,
+			     (struct sockaddr*)&from, &fromlen)) < 0) {
 			syslog(LOG_ERR, "recvfrom: %m");
 			exit(1);
 		}
+		if (n < (ssize_t)sizeof(struct tsp)) {
+			syslog(LOG_NOTICE, "short packet (%u%u bytes) from %s",
+			n, sizeof(struct tsp), inet_ntoa(from.sin_addr));
+			continue;
+		}
 		(void)gettimeofday(&from_when, (struct timezone *)0);
 		bytehostorder(&msgin);
 
@@ -222,6 +228,13 @@
 			continue;
 		}
 
+		if (memchr(msgin.tsp_name,
+		    '\0', sizeof msgin.tsp_name) == NULL) {
+			syslog(LOG_NOTICE, "hostname field not NUL terminated "
+			    "in packet from %s", inet_ntoa(from.sin_addr));
+			continue;
+		}
+
 		fromnet = NULL;
 		for (ntp = nettab; ntp != NULL; ntp = ntp->next)
 			if ((ntp->mask & from.sin_addr.s_addr) ==
@@ -430,6 +443,12 @@
 {
 	char tm[26];
 	time_t msgtime;
+
+	if (msg->tsp_type >= TSPTYPENUMBER) {
+		fprintf(fd, "bad type (%u) on packet from %s\n",
+		msg->tsp_type, inet_ntoa(addr->sin_addr));
+		return;
+	}
 	switch (msg->tsp_type) {
 
 	case TSP_LOOP:
